Web Service技术， 能使得运行在不同机器上的不同应用无须借助附加的、专门的第三方软件或硬件， 就可相互交换数据或集成。
依据Web Service规范实施的应用之间， 无论它们所使用的语言、 平台或内部协议是什么， 都可以相互交换数据。
Web Service是构造分布式、模块化应用程序和面向服务应用集成的最新技术和发展趋势。

要达到这样的目标，Web services要使用两种技术：
1.XML（标准通用标记语言下的一个子集）：XML是在web上传送结构化数据的伟大方式，Web services要以一种可靠的自动的方式操作数据，HTML（标准通用标记语言下的一个应用）不会满足要求，而XML可以使web services十分方便的处理数据，它的内容与表示的分离十分理想；
2.SOAP：SOAP使用XML消息调用远程方法，这样web services可以通过HTTP协议的post和get方法与远程机器交互，而且，SOAP更加健壮和灵活易用；
其他像UDDI和WSDL技术与XML和SOAP技术紧密结合用于服务发现。

xsd  XML Schema Define  XML架构定义

Web Service平台是用XSD来作为数据类型系统的。当你用某种语言如VB. NET或C#　来构造一个Web Service时，为了符合Web Service标准，
所有你使用的数据类型都必须被转换为XSD类型。
如想让它使用在不同平台和不同软件的不同组织间传递，还需要用某种东西将它包装起来。这种东西就是一种协议，如 SOAP

WSDL
Web Service描述语言WSDL　就是用机器能阅读的方式提供的一个正式描述文档而基于XML（标准通用标记语言下的一个子集）的语言，
用于描述Web Service及其函数、参数和返回值。因为是基于XML的，所以WSDL既是机器可阅读的，又是人可阅读的。

调用RPC与消息传递
Web Service本身其实是在实现应用程序间的通信。我们有两种应用程序通信的方法：RPC远程过程调用　和消息传递。使用RPC的时候，
客户端的概念是调用服务器上的远程过程，通常方式为实例化一个远程对象并调用其方法和属性。RPC系统试图达到一种位置上的透明性：
服务器暴露出远程对象的接口，而客户端就好像在本地使用的这些对象的接口一样，这样就隐藏了底层的信息，客户端也就根本不需要知道对象是在哪台机器上。

微软的.NET技术应该算是时下最为流行的Web Service 开发技术
微软的Visual Studio. NET便是一个便于 Web 服务的开发工具，.NET技术中用于Web Service 开发的主要工具是ASP. NET。从技术上说，ASP. net　
提供了一些超出ASP以前版本的优点(例如：代码和HTML（标准通用标记语言下的一个应用）的分离，与脚本语言相比较，对“真正”的编程语言如 C# 的支持)。

这样的任务通常都是由特殊的方法，如文件传输和分析，消息队列，还有仅适用于某些情况的的API，如IBM的"高级程序到程序交流(APPC)"等来完成的。
现在用webservice

从表面上看，Web service 就是一个应用程序，它向外界暴露出一个能够通过Web进行调用的API
下面是对Web service 更精确的解释： Web services是建立可互操作的分布式应用程序的新平台
Web service平台需要一套协议来实现分布式应用程序的创建


经典的 ASP
Active Server Pages (ASP) 已经流行很多年了。通过 ASP，可以把可执行代码放置于 HTML 页面内部。
ASP.NET 之前的 ASP 版本经常被称为经典 ASP（Classic ASP）。
